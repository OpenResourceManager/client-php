<?php

/**
 * Created by PhpStorm.
 * User: melon
 * Date: 4/27/17
 * Time: 4:48 PM
 */

namespace OpenResourceManager\Client;

/**
 * ORM Room Client
 *
 * Communicates with an ORM API to preform room operations.
 *
 * @license MIT
 * @license https://raw.githubusercontent.com/OpenResourceManager/client-php/master/LICENSE MIT License
 * @author Alex Markessinis
 */
class Room extends Client
{
    /**
     * Base Room Route
     *
     * The base API route for the room client.
     *
     * @var string
     */
    protected $route = 'rooms';

    /**
     * Get Room List
     *
     * Gets a list of rooms.
     *
     * @return \Unirest\Response
     */
    public function getList()
    {
        return parent::getList();
    }

    /**
     * Get Room
     *
     * Gets a room by it's ID.
     *
     * @param int $id
     * @return \Unirest\Response
     */
    public function get($id)
    {
        return parent::get($id);
    }

    /**
     * Get Room From Code
     *
     * Gets a room by it's code.
     *
     * @param string $code
     * @return \Unirest\Response
     */
    public function getFromCode($code)
    {
        return parent::getFromCode($code);
    }

    /**
     * Store Room
     *
     * Create or update a room, by it's code.
     *
     * @param string $code
     * @param int $room_number
     * @param string $room_label
     * @param int $building_id
     * @param string $building_code
     * @param int $floor_number
     * @param string $floor_label
     * @return \Unirest\Response
     */
    public function store(
        $code,
        $room_number,
        $room_label = null,
        $building_id = null,
        $building_code = null,
        $floor_number = null,
        $floor_label = null
    )
    {
        $fields = [];
        //@todo validate params, throw exception when they are missing
        $fields['code'] = $code;
        $fields['room_number'] = $room_number;
        if (!is_null($room_label)) $fields['room_label'] = $room_label;
        if (!is_null($building_id)) $fields['building_id'] = $building_id;
        if (!is_null($building_code)) $fields['building_code'] = $building_code;
        if (!is_null($floor_number)) $fields['floor_number'] = $floor_number;
        if (!is_null($floor_label)) $fields['floor_label'] = $floor_label;

        return $this->_post($fields);
    }

    /**
     * Delete Room
     *
     * Delete a room by it's id.
     *
     * @param int $id
     * @return \Unirest\Response
     */
    public function delete($id)
    {
        return parent::delete($id);
    }

    /**
     * Delete Room From Code
     *
     * Deletes a room by it's code.
     *
     * @param string $code
     * @return \Unirest\Response
     */
    public function deleteFromCode($code)
    {
        return parent::deleteFromCode($code);
    }
}
